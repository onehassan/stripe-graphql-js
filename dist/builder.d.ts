import Stripe from 'stripe';
import { Context, StripeCharge, StripeInvoice, StripePaymentIntent, StripePaymentMethod, StripeSubscription } from './types';
declare const builder: PothosSchemaTypes.SchemaBuilder<PothosSchemaTypes.ExtendDefaultTypes<{
    Scalars: {
        JSON: {
            Output: unknown;
            Input: JSON;
        };
    };
    Objects: {
        Stripe: {};
        StripeMutations: {};
        StripeCustomers: Stripe.ApiList<Stripe.Customer>;
        StripeCustomer: Stripe.Customer;
        StripeCustomerShipping: Stripe.Customer.Shipping;
        StripeCustomerTax: Stripe.Customer.Tax;
        StripeCustomerTaxAutomaticTax: Stripe.Customer.Tax.AutomaticTax;
        StripeCustomerTaxLocation: Stripe.Customer.Tax.Location;
        StripeAddress: Stripe.Address;
        StripePaymentMethods: Stripe.ApiList<StripePaymentMethod>;
        StripePaymentMethod: StripePaymentMethod;
        StripeCustomerListPaymentMethodsParamsType: Stripe.CustomerListPaymentMethodsParams.Type;
        StripePaymentMethodBillingDetails: Stripe.PaymentMethod.BillingDetails;
        StripePaymentMethodTypes: Stripe.PaymentMethod.Type;
        StripePaymentMethodCard: Stripe.PaymentMethod.Card;
        StripePaymentMethodCardChecks: Stripe.PaymentMethod.Card.Checks;
        StripePaymentMethodCardNetworks: Stripe.PaymentMethod.Card.Networks;
        StripePaymentMethodCardThreeDSecureUsage: Stripe.PaymentMethod.Card.ThreeDSecureUsage;
        StripePaymentMethodCardWallet: Stripe.PaymentMethod.Card.Wallet;
        StripePaymentMethodCardWalletMasterpass: Stripe.PaymentMethod.Card.Wallet.Masterpass;
        StripePaymentMethodCardWalletType: Stripe.PaymentMethod.Card.Wallet.Type;
        StripePaymentMethodCardWalletVisaMasterpass: Stripe.PaymentMethod.Card.Wallet.Masterpass;
        StripePaymentMethodCardWalletVisaCheckout: Stripe.PaymentMethod.Card.Wallet.VisaCheckout;
        StripeSubscriptions: Stripe.ApiList<StripeSubscription>;
        StripeSubscription: StripeSubscription;
        StripeSubscriptionStatus: Stripe.Subscription.Status;
        StripeSubscriptionItems: Stripe.ApiList<Stripe.SubscriptionItem>;
        StripeSubscriptionItem: Stripe.SubscriptionItem;
        StripeSubscriptionItemBillingThresholds: Stripe.SubscriptionItem.BillingThresholds;
        StripeSubscriptionAutomaticTax: Stripe.Subscription.AutomaticTax;
        StripeSubscriptionBillingThresholds: Stripe.Subscription.BillingThresholds;
        StripeSubscriptionPauseCollection: Stripe.Subscription.PauseCollection;
        StripeInvoice: StripeInvoice;
        StripeInvoices: Stripe.ApiList<StripeInvoice>;
        StripeInvoiceAutomaticTax: Stripe.Invoice.AutomaticTax;
        StripeInvoiceCustomField: Stripe.Invoice.CustomField;
        StripeInvoiceCustomerShipping: Stripe.Invoice.CustomerShipping;
        StripeInvoiceCustomerTaxId: Stripe.Invoice.CustomerTaxId;
        StripeInvoiceRenderingOptions: Stripe.Invoice.RenderingOptions;
        StripeInvoiceStatusTransitions: Stripe.Invoice.StatusTransitions;
        StripeInvoiceLineItems: Stripe.ApiList<Stripe.InvoiceLineItem>;
        StripeInvoiceLineItem: Stripe.InvoiceLineItem;
        StripeInvoiceLineItemPeriod: Stripe.InvoiceLineItem.Period;
        StripeInvoiceLineItemTaxAmount: Stripe.InvoiceLineItem.TaxAmount;
        StripePrice: Stripe.Price;
        StripePlan: Stripe.Plan;
        StripePlanTransformUsage: Stripe.Plan.TransformUsage;
        StripeProduct: Stripe.Product;
        StripeTaxRate: Stripe.TaxRate;
        StripeTestClock: Stripe.TestHelpers.TestClock;
        StripeBillingPortalSession: Stripe.BillingPortal.Session;
        StripePaymentIntent: StripePaymentIntent;
        StripePaymentIntents: Stripe.ApiList<StripePaymentIntent>;
        StripeCharge: StripeCharge;
        StripeCharges: Stripe.ApiList<StripeCharge>;
        StripeConnectedAccount: Stripe.Account;
        StripeConnectedAccounts: Stripe.ApiList<Stripe.Account>;
    };
    Context: Context;
}>>;
export { builder };
//# sourceMappingURL=builder.d.ts.map